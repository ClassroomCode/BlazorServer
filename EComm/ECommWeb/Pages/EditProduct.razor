@page "/edit/{id}"

@using ECommWeb.Data
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ECommContext> DbFactory

<h3>Edit Product</h3>

@if (product == null)
{
    <p><em>@currentStatus</em></p>
}
else
{
   <EditForm Model="@product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    <fieldset>
        <div class="row mb-2">
            <label class="col-2" for="ProductName">Name:</label>
            <InputText class="col-6" id="ProductName" @bind-Value="product.ProductName" />
        </div>
        <div class="row mb-2">
            <div class="col-5 offset-2">
                <ValidationMessage For="@(() => product.ProductName)" />
            </div>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="UnitPrice">Unit Price:</label>
            <InputNumber class="col-6" id="UnitPrice" @bind-Value="product.UnitPrice" />
        </div>
        <div class="row mb-2">
            <div class="col-5 offset-2">
                <ValidationMessage For="@(() => product.UnitPrice)" />
            </div>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="Package">Package:</label>
            <InputText class="col-6" id="Package" @bind-Value="product.Package" />
        </div>
        <div class="row mb-2">
            <div class="col-5 offset-2">
                <ValidationMessage For="@(() => product.Package)" />
            </div>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="Package">Supplier:</label>
            <InputSelect class="col-6" id="Supplier" @bind-Value="product.SupplierId">
                @foreach (var supplier in Suppliers!) {
                    <option value="@supplier.Id">@supplier.CompanyName</option>
                }
            </InputSelect>
        </div>
        <div class="row mb-2">
            <label class="col-2" for="IsDiscontinued">Inactive:</label>
            <InputCheckbox class="col-6" id="Inactive" @bind-Value="product.IsDiscontinued" />
        </div>
        <button class="btn btn-primary" type="submit">Save</button>
    </fieldset>
</EditForm>
}

@code {
    [Parameter]
    public string? id { get; set; }

    private string currentStatus = "Loading...";

    private Product? product;
    private Supplier[]? Suppliers;

    protected override async Task OnInitializedAsync()
    {
        int pid;
        if (!int.TryParse(id, out pid)) {
            currentStatus = "Invalid Id";
            return;
        }
        var context = await DbFactory.CreateDbContextAsync();
        product = await context.Products
        .Include(p => p.Supplier)
        .SingleOrDefaultAsync(p => p.Id == pid);

        if (product == null) {
            currentStatus = "Product does not exist";
        }
        Suppliers = await (from s in context.Suppliers
                     orderby s.CompanyName
                     select s).ToArrayAsync();
    }

    private async Task SaveProduct()
    {
        //
    }
}
